'use strict'
//alert(" Привет я JavaScript! ");

//1.Объявите две переменные: admin и name.
// 'use strict'
// let admin, name;
// name = "Джон";
// //Запишите строку "Джон" в переменную name.
// //Скопируйте значение из переменной name в admin.
// admin = name;
// //Выведите на экран значение admin, используя функцию alert (должна показать «Джон»).
// alert(admin);


//Придумайте правильные имена
//Создайте переменную для названия нашей планеты. Как бы вы её назвали?
// let ourPlanetName = "Земля";
// Создайте переменную для хранения имени текущего посетителя сайта. Как бы вы назвали такую переменную?
// let currentUserName = "guest";
// ЮЗЕР - тот, кто использует сайт, программу
// Визитор - псетитель выставки, дворца, ресторана


// Какие буквы (заглавные или строчные) использовать для имён констант?
// Рассмотрим следующий код:

// const birthday = '18.04.1982';

// const age = someCode(birthday);
// У нас есть константа birthday, а также age, которая вычисляется при помощи некоторого кода,
//     используя значение из birthday(в данном случае детали не имеют значения, поэтому код не 
//     рассматривается).

// Можно ли использовать заглавные буквы для имени birthday ? А для age ? Или одновременно для обеих
// переменных ?

// const BIRTHDAY = '18.04.1982'; // использовать заглавные буквы? 
// можно т.к.константа известна до выполнения кода

// const age = someCode(BIRTHDAY); // а здесь? нельзя т.к. переменная age 
// будет известна после выполнения кода


// Что выведет этот скрипт?

// let nameJune = "Ilya";

// alert( `hello ${1}` ); // "hello 1"(добавит числок хелло)

// alert( `hello ${"name"}` ); // "hello name"(добавит строку нейм к хелло)

// alert( `hello ${nameJune}` ); // "hello Ilya"? (добавит значение переменной нейм)


// Создайте страницу, которая спрашивает имя у пользователя и выводит его.
// 'use strict';

// let userName = prompt("ваше имя?", "");
// alert(`тебя зовут ${userName}`);


// Постфиксная и префиксная формы
// Чему будут равны переменные a, b, c и d в примере ниже?

// let a = 1, b = 1;

// let c = ++a; // 2 (увеличивает переменную на 1)
// let d = b++; // 1(тоже увеличивает переменную на 1 но віводит предідущее значение)
// alert(c);
// alert(d);


// Результат присваивания

// Чему будут равны переменные a и x после исполнения кода в примере ниже?

// let a = 2;

// let x = 1 + (a *= 2);
// //a= 4
// // x=5


// Преобразование типов
// Какой результат будет у выражений ниже?

// "" + 1 + 0 //10 сложение сострокой преобразует 1 к строке"1" затем происходит тоже самое "1"+"0"//10
// "" - 1 + 0//-1 вычитание всегда приобразует к числу )
// true + false//1
// 6 / "3"//2 (все строки приводятся к числам при делении)
// "2" * "3"//6(все строки приводятся к числам при умножении)
// 4 + 5 + "px"//9px сложение сострокой px преобразует 9 к строке"9" получаем строку "9px"  --
// "$" + 4 + 5// "$45" числа преобрзуются в строки при сложении со строкой --
// "4" - 2//2 -- вічитание всегда преобразует строки к числу
// "4px" - 2//nan  ++
// 7 / 0//infinity --
// "  -9  " + 5//' -9 5' +- сложение со строкой преобразует число 5 в строку
// "  -9  " - 5//-14 вычитание всегда преобразует строку к числу
// null + 1//1 null становиться 0 после численного преобразования
// undefined + 1//nan undefand становится nun после численного преобразования
// " \t \n" - 2//-2 пробелиніе символі такие как /t /n при образовании 
// //  строки игнорируются при приобразовании в число так что строка " \t \n" аналогично становится 0
// // после чмсленного преобразования 


// Исправьте сложение

// Ниже приведён код, который запрашивает у пользователя два числа и показывает их сумму.

// Он работает неправильно. Код в примере выводит 12 (для значения полей по умолчанию).

// В чём ошибка? Исправьте её. Результат должен быть 3.

// let a = +prompt("Первое число?", 1);
// let b = +prompt("Второе число?", 2);

// alert(a + b); // 3
// либо
// let a = prompt("Первое число?", 1);
// let b = prompt("Второе число?", 2);

// alert(+a + +b); // 3


// "" + 1 + 0//"10" строка приводит число к строке при операторе +
// "" - 1 + 0//-1 с остальными операторами строка преобразуется к числу в днном случае пустая будет 0
// true + false//1 = 1+0
// 6 / "3"//2 с остальными операторами строка преобразуется к числу
// "2" * "3" // 6 с остальными операторами строка преобразуется к числу
// 4 + 5 + "px"// '9px' снаала выполнится сложение чисел, затем число преобразуется в строку
// "$" + 4 + 5//$45 строка приводит число к строке при операторе +
// "4" - 2// 2 с остальными операторами строка преобразуется к числу
// "4px" - 2// nan ошибка чтения числа на месте символа "px"
// 7 / 0// infinity
// "  -9  " + 5// " -9 5" число преобразуется в строку
// "  -9  " - 5// -14 с остальными операторами строка преобразуется к числу в днном случае пустая будет 0
// null + 1//1 null становится 0 после численного преобразования.
// undefined + 1//nan undefined становится NaN после численного преобразования.
// " \t \n" - 2//-2  аналогично пустой строке, становится 0 после численного преобразования.




// Операторы сравнения

// Каким будет результат этих выражений?

// 5 > 4//true
// "ананас" > "яблоко"//false
// "2" > "12"//true Снова посимвольное сравнение. Первый символ первой строки "2" больше, чем первый символ второй "1".
// undefined == null// true при не строгом сравнении эти типы равны друг другу и не равны никаким другим типам это специальное правило языка
// undefined === null//false строгое равенство сравнивает типы
// null == "\n0\n"//false null при не строгом сравнении равен только undefined
// null === +"\n0\n";// false строгое сравнение разных типов


// if (строка с нулём)

// Выведется ли alert?// да так как строка не пустая значение. 0, "", null, undefined, nan
// - преобразуется к false, if вЫполняет блок кода если условие true

// if ("0") {
//   alert( 'Привет' );
// }


// Название JavaScript

// Используя конструкцию if..else, напишите код, который будет спрашивать:
//  „Какое «официальное» название JavaScript ?“

// Если пользователь вводит «ECMAScript», то показать: «Верно!», 
// в противном случае – отобразить: «Не знаете ? ECMAScript!»

// let oficcialName = prompt("Какое 'официальное' название JavaScript?", "");
// if (oficcialName == "ECMAScript") {
//     alert("Верно!");
// } else {
//     alert('Не знаете? ECMAScript');
// }


// Покажите знак числа

// Используя конструкцию if..else, напишите код, который получает число через prompt,
//     а затем выводит в alert:

// 1, если значение больше нуля,
// -1, если значение меньше нуля,
// 0, если значение равно нулю.
// Предполагается, что пользователь вводит только числа.

// let userNumber = prompt("Ведите любое число!", 0);
// if (userNumber > 0) {
//     alert(1);
// } else if (userNumber < 0) {
//     alert(-1);
// } else {
//     alert(0);
// }


// Перепишите 'if' в '?'
// Перепишите конструкцию if с использованием условного оператора '?':

// let a = 1;
// let b = a;
// let result = (a + b < 4) ? "Мало" : "Много";
// alert(result);

// // if (a + b < 4) {
// //   result = 'Мало';
// // } else {
// //   result = 'Много';
// // }


// Перепишите 'if..else' в '?'
// Перепишите if..else с использованием нескольких операторов '?'.
// Для читаемости рекомендуется разбить код на несколько строк.

// if (login == 'Сотрудник') {
//   message = 'Привет';
// } else if (login == 'Директор') 
//   message = 'Здравствуйте';
// } else if (login == '') {
//   message = 'Нет логина';
// } else {
//   message = '';
// }

// let login = prompt('Ваш логин!', '');
// let message = (login == "Сотрудник") ? "Привет" :
//     (login == "Директор") ? "Здравствуйте" :
//         (login == 'Буба') ? "Добро пожаловать" :
//             '';
// alert(message);


// ИЛИ, И, НЕ
// Что выведет alert (ИЛИ)?
// важность: 5
// Что выведет код ниже?

// alert( null || 2 || undefined );// 2 конвертирует в логическое значение. Возврщает перый резльтат true


// Что выведет alert (ИЛИ)?
// важность: 3
// Что выведет код ниже?

// alert( alert(1) || 2 || alert(3) );// 1 потом 2  alert не возвращает значения, иначе говоря возвращает undefined


// Что выведет alert (И)?
// важность: 5
// Что выведет код ниже?

//alert(1 && null && 2); // null логическое и преобразовует значение в буль и 
// возвращает первое false


// Что выведет alert (И)?
// важность: 3
// Что выведет код ниже?

//alert( alert(1) && alert(2) ); //1 затем undefined alert не возвращает, && возвращает первое false

// Что выведет этот код?
// важность: 5
// Что выведет код ниже?

//alert(null || 2 && 3 || 4); //сначала выполнится и т.к. 
// приоритет выше(2=true 3=true) вернет последннее т.к нет ложного: 3, затем и || 
// конвертирует к логическому значению и вернет первое значение true//3


// Проверка значения из диапазона
// важность: 3
// Напишите условие if для проверки, что переменная age находится в диапазоне между 14 и 90
// включительно.
// «Включительно» означает, что значение переменной age может быть равно 14 или 90.

//создать переменную age
//присвоить ей значение от 14 до 90 включительно


// let age = prompt("Введите возраст!", '');

// if (age >= 14 && age <= 90) {
//     alert('В диапазоне!');
// } else {
//     alert('Не в диапазоне!');
// }

// let age = prompt("Введите возраст!", '');

// if (age < 14 || age > 90) {
//     alert('не в диапазоне!');
// } else {
//     alert('в диапазоне!');
// }

// Напишите условие if для проверки, что значение переменной age НЕ находится
//  в диапазоне 14 и 90 включительно.
// Напишите два варианта: первый с использованием оператора НЕ!, второй – без этого
// оператора.
// let age = prompt("Введите возраст!", '');
// if (age < 14 || age > 90) {
//     alert('не в диапазоне');
// }

// let age = prompt('Введите возраст!', '');

// if (!(age >= 14 && age <= 90)) {
//     alert('Не в диапазоне!');
// }


// Вопрос о "if"
// важность: 5
// Какие из перечисленных ниже alert выполнятся?
// Какие конкретно значения будут результатами выражений в условиях if(...)?

// if (-1 || 0) alert( 'first' ); //первое число -1 тру выполнит алерт.
// if (-1 && 0) alert( 'second' ); // вернет второе значение т.к. возвращает фолс не выполнит алерт
// if (null || -1 && 1) alert( 'third' );// вернет 1 тру выполнит алерт